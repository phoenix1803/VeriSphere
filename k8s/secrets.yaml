apiVersion: v1
kind: Secret
metadata:
  name: verisphere-secrets
  namespace: verisphere
type: Opaque
data:
  # Database credentials (base64 encoded)
  DATABASE_URL: cG9zdGdyZXNxbDovL3ZlcmlzcGhlcmU6dmVyaXNwaGVyZTEyM0Bwb3N0Z3Jlcy1zZXJ2aWNlOjU0MzIvdmVyaXNwaGVyZQ==
  
  # Redis URL (base64 encoded)
  REDIS_URL: cmVkaXM6Ly9yZWRpcy1zZXJ2aWNlOjYzNzkvMA==
  
  # JWT Secret Key (base64 encoded - generate new for production)
  JWT_SECRET_KEY: eW91ci1zdXBlci1zZWNyZXQtand0LWtleS1jaGFuZ2UtaW4tcHJvZHVjdGlvbg==
  
  # Application Secret Key (base64 encoded - generate new for production)
  SECRET_KEY: eW91ci1zdXBlci1zZWNyZXQtYXBwLWtleS1jaGFuZ2UtaW4tcHJvZHVjdGlvbg==
  
  # External API Keys (base64 encoded - replace with actual keys)
  HUGGINGFACE_API_KEY: eW91ci1odWdnaW5nZmFjZS1hcGkta2V5
  SERPER_API_KEY: eW91ci1zZXJwZXItYXBpLWtleQ==
  GOOGLE_VISION_API_KEY: eW91ci1nb29nbGUtdmlzaW9uLWFwaS1rZXk=
  FIRECRAWL_API_KEY: eW91ci1maXJlY3Jhd2wtYXBpLWtleQ==
  
  # Blockchain Configuration (if using)
  BLOCKCHAIN_PRIVATE_KEY: eW91ci1ibG9ja2NoYWluLXByaXZhdGUta2V5
  BLOCKCHAIN_RPC_URL: aHR0cHM6Ly9tYWlubmV0LmluZnVyYS5pby92My95b3VyLWluZnVyYS1rZXk=

---
# Note: In production, use external secret management like:
# - AWS Secrets Manager
# - Azure Key Vault  
# - Google Secret Manager
# - HashiCorp Vault
# - Kubernetes External Secrets Operator

# Example with External Secrets Operator:
# apiVersion: external-secrets.io/v1beta1
# kind: SecretStore
# metadata:
#   name: verisphere-secret-store
#   namespace: verisphere
# spec:
#   provider:
#     aws:
#       service: SecretsManager
#       region: us-west-2
#       auth:
#         jwt:
#           serviceAccountRef:
#             name: verisphere-service-account